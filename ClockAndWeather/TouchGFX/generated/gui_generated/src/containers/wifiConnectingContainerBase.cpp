/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/wifiConnectingContainerBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

wifiConnectingContainerBase::wifiConnectingContainerBase() :
    buttonCallback(this, &wifiConnectingContainerBase::buttonCallbackHandler),
    wifiRetryPressedCallback(0)
{
    setWidth(480);
    setHeight(272);

    gradientBG.setXY(90, 54);
    gradientBG.setBitmap(touchgfx::Bitmap(BITMAP_ERROR_BOX_ID));

    wifiRetryButton.setXY(160, 188);
    wifiRetryButton.setBitmaps(touchgfx::Bitmap(BITMAP_ERRORBUTTON_ID), touchgfx::Bitmap(BITMAP_ERRORBUTTON_ID));
    wifiRetryButton.setLabelText(touchgfx::TypedText(T_SINGLEUSEID179));
    wifiRetryButton.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(235, 235, 235));
    wifiRetryButton.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(235, 235, 235));
    wifiRetryButton.setAction(buttonCallback);

    wifiConnectionStatus.setPosition(151, 152, 178, 31);
    wifiConnectionStatus.setColor(touchgfx::Color::getColorFrom24BitRGB(235, 235, 235));
    wifiConnectionStatus.setLinespacing(0);
    wifiConnectionStatus.setTypedText(touchgfx::TypedText(T_CONNECTIONERROR));

    errorImage.setXY(208, 82);
    errorImage.setBitmap(touchgfx::Bitmap(BITMAP_WIFI_ERROR_ID));

    connectingText.setPosition(183, 162, 115, 30);
    connectingText.setColor(touchgfx::Color::getColorFrom24BitRGB(235, 235, 235));
    connectingText.setLinespacing(0);
    Unicode::snprintf(connectingTextBuffer, CONNECTINGTEXT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID184).getText());
    connectingText.setWildcard(connectingTextBuffer);
    connectingText.setTypedText(touchgfx::TypedText(T_CONNECTING));

    connectingImage.setXY(204, 91);
    connectingImage.setBitmap(touchgfx::Bitmap(BITMAP_WIFI_DOT_ICON_24_3X_ID));

    add(gradientBG);
    add(wifiRetryButton);
    add(wifiConnectionStatus);
    add(errorImage);
    add(connectingText);
    add(connectingImage);
}

void wifiConnectingContainerBase::initialize()
{
	
}

void wifiConnectingContainerBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &wifiRetryButton)
    {
        //wifiRetryPressed
        //When wifiRetryButton clicked emit wifiRetryPressed callback
        //Emit callback
        emitWifiRetryPressedCallback();
    }
}
